from telethon.tl.functions.channels import JoinChannelRequest
import aiohttp
from bs4 import BeautifulSoup
from .. import loader, utils

#meta developer: Ksenon

@loader.tds
class HabrParserMod(loader.Module):
    """üñ•Ô∏è –ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—Ç–∞—Ç–µ–π –Ω–∞ –•–∞–±—Ä–µ"""

    strings = {"name": "HabrParser"}

    async def client_ready(self, client, db):
        await client(JoinChannelRequest("ksenonmodules"))

    @loader.command()
    async def habr(self, message):
        """üîé –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π –Ω–∞ –•–∞–±—Ä–µ. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .habr <–∑–∞–ø—Ä–æ—Å>"""
        query = utils.get_args_raw(message)
        if not query:
            await utils.answer(message, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å!")
            return

        async with aiohttp.ClientSession() as session:
            async with session.get(f"https://habr.com/ru/search/?q={query}&target_type=posts") as response:
                soup = BeautifulSoup(await response.text(), 'html.parser')
                articles = soup.find_all('article', class_='tm-articles-list__item')[:5]

                if not articles:
                    await utils.answer(message, "üòï –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
                    return

                result = "‚îè üñ•Ô∏è HabrParser\n‚îÉ\n"
                for article in articles:
                    title_elem = article.find('h2', class_='tm-title tm-title_h2')
                    title = title_elem.text.strip() if title_elem else "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω"

                    url_elem = article.find('a', class_='tm-title__link')
                    url = "https://habr.com" + url_elem['href'] if url_elem else "URL –Ω–µ –Ω–∞–π–¥–µ–Ω"

                    description_elem = article.find('div', class_='article-formatted-body')
                    description = description_elem.text.strip() if description_elem else "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

                    result += f"‚î£ üìë <b>{title}</b>\n‚îÉ \n"
                    result += f"‚î£ üí≠ <code>{description[:100]}...</code>\n‚îÉ\n"
                    result += f"‚î£ üåç <code>{url}</code>\n‚îÉ\n"

                result += "‚îÉ\n‚îó üï∂Ô∏è Habr"

                await utils.answer(message, result)
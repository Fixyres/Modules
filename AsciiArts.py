#    ██████╗  █████╗ ███╗   ██╗ █████╗ ███╗   ██╗
#    ██╔══██╗██╔══██╗████╗  ██║██╔══██╗████╗  ██║
#    ██████╔╝███████║██╔██╗ ██║███████║██╔██╗ ██║
#    ██╔══██╗██╔══██║██║╚██╗██║██╔══██║██║╚██╗██║
#    ██████╔╝██║  ██║██║ ╚████║██║  ██║██║ ╚████║

from .. import loader, utils

@loader.tds
class AsciiArtsMod(loader.Module):
    """Создает ASCII арт баннеры"""

    strings = {"name": "AsciiArts"}

    def __init__(self):
        self.prefix = "#             "  # Фиксированный отступ
        self.letters = {
            'A': [
                "█████╗ ",
                "██╔══██╗",
                "███████║",
                "██╔══██║",
                "██║  ██║"
            ],
            'B': [
                "██████╗ ",
                "██╔══██╗",
                "██████╔╝",
                "██╔══██╗",
                "██████╔╝"
            ],
            'C': [
                " ██████╗",
                "██╔════╝",
                "██║     ",
                "██║     ",
                " ██████╗"
            ],
            'D': [
                "██████╗ ",
                "██╔══██╗",
                "██║  ██║",
                "██║  ██║",
                "██████╔╝"
            ],
            'E': [
                "███████╗",
                "██╔════╝",
                "█████╗  ",
                "██╔══╝  ",
                "███████╗"
            ],
            'F': [
                "███████╗",
                "██╔════╝",
                "█████╗  ",
                "██╔══╝  ",
                "██║     "
            ],
            'G': [
                " ██████╗",
                "██╔════╝",
                "██║  ███╗",
                "██║   ██║",
                " ██████╔╝"
            ],
            'H': [
                "██╗  ██╗",
                "██║  ██║",
                "███████║",
                "██╔══██║",
                "██║  ██║"
            ],
            'I': [
                "██╗",
                "██║",
                "██║",
                "██║",
                "██║"
            ],
            'J': [
                "     ██╗",
                "     ██║",
                "     ██║",
                "██   ██║",
                " █████╔╝"
            ],
            'K': [
                "██╗  ██╗",
                "██║ ██╔╝",
                "█████╔╝ ",
                "██╔═██╗ ",
                "██║  ██╗"
            ],
            'L': [
                "██╗     ",
                "██║     ",
                "██║     ",
                "██║     ",
                "███████╗"
            ],
            'M': [
                "███╗   ███╗",
                "████╗ ████║",
                "██╔████╔██║",
                "██║╚██╔╝██║",
                "██║ ╚═╝ ██║"
            ],
            'N': [
                "███╗   ██╗",
                "████╗  ██║",
                "██╔██╗ ██║",
                "██║╚██╗██║",
                "██║ ╚████║"
            ],
            'O': [
                " ██████╗",
                "██╔═══██╗",
                "██║   ██║",
                "██║   ██║",
                " ██████╔╝"
            ],
            'P': [
                "██████╗ ",
                "██╔══██╗",
                "██████╔╝",
                "██╔═══╝ ",
                "██║     "
            ],
            'Q': [
                " ██████╗ ",
                "██╔═══██╗",
                "██║   ██║",
                "██║▄▄ ██║",
                " ██████╔╝"
            ],
            'R': [
                "██████╗ ",
                "██╔══██╗",
                "██████╔╝",
                "██╔══██╗",
                "██║  ██║"
            ],
            'S': [
                "███████╗",
                "██╔════╝",
                "███████╗",
                "╚════██║",
                "███████║"
            ],
            'T': [
                "████████╗",
                "╚══██╔══╝",
                "   ██║   ",
                "   ██║   ",
                "   ██║   "
            ],
            'U': [
                "██╗   ██╗",
                "██║   ██║",
                "██║   ██║",
                "██║   ██║",
                " ██████╔╝"
            ],
            'V': [
                "██╗   ██╗",
                "██║   ██║",
                "██║   ██║",
                " ██╗ ██╔╝",
                "  ╚███╔╝ "
            ],
            'W': [
                "██╗    ██╗",
                "██║    ██║",
                "██║ █╗ ██║",
                "██║███╗██║",
                " ███╔███╔╝"
            ],
            'X': [
                "██╗  ██╗",
                "╚██╗██╔╝",
                " ╚███╔╝ ",
                " ██╔██╗ ",
                "██╔╝ ██╗"
            ],
            'Y': [
                "██╗   ██╗",
                " ██╗ ██╔╝",
                "  ████╔╝ ",
                "   ██╔╝  ",
                "   ██║   "
            ],
            'Z': [
                "███████╗",
                "╚══███╔╝",
                "  ███╔╝ ",
                " ███╔╝  ",
                "███████╗"
            ],
            ' ': [
                "  ",
                "  ",
                "  ",
                "  ",
                "  "
            ],
            '0': [
                " ██████╗ ",
                "██╔═████╗",
                "██║██╔██║",
                "████╔╝██║",
                " ██████╔╝"
            ],
            '1': [
                " ██╗",
                "███║",
                "╚██║",
                " ██║",
                " ██║"
            ],
            '2': [
                "██████╗ ",
                "╚════██╗",
                " █████╔╝",
                "██╔═══╝ ",
                "███████╗"
            ],
            '3': [
                "██████╗ ",
                "╚════██╗",
                " █████╔╝",
                " ╚═══██╗",
                "██████╔╝"
            ],
            '!': [
                "██╗",
                "██║",
                "██║",
                "╚═╝",
                "██╗"
            ],
            '?': [
                "██████╗ ",
                "╚════██╗",
                "  ▄███╔╝",
                "  ╚═══╝ ",
                "  ██╗   "
            ],
            '.': [
                "   ",
                "   ",
                "   ",
                "   ",
                "██╗"
            ],
            '_': [
                "        ",
                "        ",
                "        ",
                "        ",
                "███████╗"
            ]
        }

    def generate_art(self, text):
        """Генерирует ASCII арт из текста"""
        text = text.upper()
        result = ["", "", "", "", ""]

        for char in text:
            if char in self.letters:
                for i in range(5):
                    result[i] += self.letters[char][i]
            else:
                for i in range(5):
                    result[i] += "  "

        return "\n".join([self.prefix + line for line in result])

    @loader.command()
    async def arts(self, message):
        """Создать ASCII арт баннер. Использование: .arts <текст>"""
        args = utils.get_args_raw(message)
        if not args:
            await message.edit("ℹ️ Пожалуйста, укажите текст для создания арта\n"
                             "Пример: .arts BANAN")
            return

        try:
            art = self.generate_art(args)
            await message.edit(f"<code>{art}</code>")
        except Exception as e:
            await message.edit(f"❌ Ошибка при создании арта: {str(e)}")
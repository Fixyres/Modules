version = (3, 0, 0)

# meta developer: @codermasochist

import random
from telethon.tl.types import InputMessagesFilterVideo, Message
from telethon.errors import RPCError
from .. import loader, utils

@loader.tds
class AsEditsMod(loader.Module):
    """–ú–æ–¥—É–ª—å –∫–∏–¥–∞–µ—Ç –∞—Ö—É–µ–Ω–Ω—ã–µ —ç–¥–∏—Ç—ã. by @codermasochist"""

    strings = {
        "name": "AsEdits",
        "choosi_video": "<emoji document_id=5328311576736833844>üî¥</emoji> –ü–æ–¥–±–∏—Ä–∞–µ–º –≤–∏–¥–µ–æ...",
        "no_channel": "<b>–ù–µ—Ç –∫–∞–Ω–∞–ª–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.</b>",
        "no_videos_found": "<b>–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∏–¥–µ–æ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ.</b>",
        "selected_edit": "–ü–æ–¥–æ–±—Ä–∞–ª —ç–¥–∏—Ç."
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "custom_channel",
                None,
                doc=lambda: "–í–≤–µ–¥–∏—Ç–µ —Å—é–¥–∞ —é–∑–µ—Ä –∫–∞–Ω–∞–ª–∞",
            ),
        )

    @loader.command()
    async def asedit(self, message: Message):
        """–∫–∏–¥–∞–µ—Ç —ç–¥–∏—Ç—ã —Å –∫–∞–Ω–∞–ª–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞. @makimalove"""
        channel = "makimalove"
        await utils.answer(message, self.strings["choosi_video"])

        try:
            videos = [
                msg async for msg in self.client.iter_messages(
                    channel,
                    limit=1000,
                    filter=InputMessagesFilterVideo,
                )
            ]

            if not videos:
                await utils.answer(message, self.strings["no_videos_found"])
                return

            video = random.choice(videos)
            reply = await message.get_reply_message()
            reply_id = reply.id if reply else None
            
            await utils.answer_file(
                message,
                video,
                video.text or f"<b>–ü–æ–¥–æ–±—Ä–∞–ª —ç–¥–∏—Ç.</b>",
                reply_to=reply_id,
            )
            if message.out:
                await message.delete()

        except RPCError as e:
            await utils.answer(message, str(e))
        except Exception:
            await utils.answer(message, self.strings["no_videos_found"])

    @loader.command()
    async def edit(self, message: Message):
        """–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –≤–∏–¥–µ–æ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤ –∫—Ñ–≥ –∫–∞–Ω–∞–ª–∞"""
        custom_channel = self.config["custom_channel"]

        if not custom_channel:
            await utils.answer(message, self.strings["no_channel"])
            return

        await utils.answer(message, self.strings["choosi_video"])

        try:
            videos = [
                msg async for msg in self.client.iter_messages(
                    custom_channel,
                    limit=1000,
                    filter=InputMessagesFilterVideo,
                )
            ]

            if not videos:
                await utils.answer(message, self.strings["no_videos_found"])
                return

            video = random.choice(videos)
            reply = await message.get_reply_message()
            reply_id = reply.id if reply else None

            await utils.answer_file(
                message,
                video,
                video.text or self.strings["selected_edit"],
                reply_to=reply_id,
            )
            if message.out:
                await message.delete()

        except RPCError as e:
            await utils.answer(message, str(e))
        except Exception:
            await utils.answer(message, self.strings["no_videos_found"])
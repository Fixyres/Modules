import asyncio
import time
from telethon.errors import AlreadyInConversationError
from .. import loader

class Farm:
    async def _pay_taxes(self):
        try:
            async with self._client.conversation(self._bot, exclusive=False) as conv:
                for i in range(1, 8):
                    await asyncio.sleep(3)
                    await conv.send_message(f'–ø–ª–∞–Ω–µ—Ç–∞ {i}')
                    r = await conv.get_response()
                    await asyncio.sleep(3)
                    await r.click(0)
                    await asyncio.sleep(3)
                    print(f'–ü–ª–∞–Ω–µ—Ç–∞ {i}, —Å–æ–±—Ä–∞–ª –ø—Ä–∏–±—ã–ª—å')
        except AlreadyInConversationError:
            print("–£–∂–µ –µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç–∞—è –±–µ—Å–µ–¥–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")

    async def _explore_planet(self):
        try:
            async with self._client.conversation(self._bot, exclusive=False) as conv:
                await conv.send_message('–∏—Å–ø—ã—Ç–∞—Ç—å –ø–ª–∞–Ω–µ—Ç—É')
                print("–∏—Å–ø—ã—Ç—ã–≤–∞—é –ø–ª–∞–Ω–µ—Ç—É")
        except AlreadyInConversationError:
            print("–£–∂–µ –µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç–∞—è –±–µ—Å–µ–¥–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")

    async def _send_bonus(self):
        try:
            async with self._client.conversation(self._bot, exclusive=False) as conv:
                await conv.send_message('–±–æ–Ω—É—Å')
                print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: –±–æ–Ω—É—Å")
        except AlreadyInConversationError:
            print("–£–∂–µ –µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç–∞—è –±–µ—Å–µ–¥–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")

class AstroKs(loader.Module, Farm):
    """
    –ú–æ–¥—É–ª—å –¥–ª—è —Ñ–∞—Ä–º–∞ –≤ @astro_GameBot –æ—Ç @Apolon99
    """

    strings = {"name": "AstroKs"}

    _bot = "@astro_GameBot"     
    
    def __init__(self):        
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "AutoTree",
                True,
                "–í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Ñ–∞—Ä–º –ø–ª–∞–Ω–µ—Ç.",
                validator=loader.validators.Boolean(),
            ),
            loader.ConfigValue(
                "PlanetInterval",
                3600,
                "–ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –¥–ª—è —Å–±–æ—Ä–∞ –ø—Ä–∏–±—ã–ª–∏ —Å –ø–ª–∞–Ω–µ—Ç.",
                validator=loader.validators.Integer(minimum=60),
            ),
            loader.ConfigValue(
                "BonusInterval",
                43200,
                "–ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–æ–Ω—É—Å–∞.",
                validator=loader.validators.Integer(minimum=3600),
            ),
        )            
     
    @loader.loop(interval=1, autostart=True)
    async def main_loop(self):
        current_time = time.time()
        
        if self.config["AutoTree"]:
            # –°–æ–±–∏—Ä–∞–µ–º –Ω–∞–ª–æ–≥–∏ —Å –ø–ª–∞–Ω–µ—Ç —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
            if not self.get("Tree_time") or (current_time - self.get("Tree_time")) >= self.config["PlanetInterval"]:
                await self._pay_taxes()
                self.set("Tree_time", int(current_time))
            
            # –ò—Å–ø—ã—Ç—ã–≤–∞–µ–º –ø–ª–∞–Ω–µ—Ç—É –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
            if not self.get("Explore_time") or (current_time - self.get("Explore_time")) >= self.config["PlanetInterval"]:
                await self._explore_planet()
                self.set("Explore_time", int(current_time))
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–æ–Ω—É—Å —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
            if not self.get("Bonus_time") or (current_time - self.get("Bonus_time")) >= self.config["BonusInterval"]:
                await self._send_bonus()
                self.set("Bonus_time", int(current_time))
    
    @loader.command()
    async def astr(self, message):
        """- –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ —Ñ–∞—Ä–º–∏–Ω–≥–∞ –≤ –±–æ—Ç–µ."""
        self.config["AutoTree"] = True
        self.main_loop.start()
        await message.edit("<b><i>–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞—Ä–º —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç!</i></b><emoji document_id=5436278610652577660>üíÄ</emoji>\n<b><u>–æ–∂–∏–¥–∞–π—Ç–µ</b></u>.")
        
    @loader.command()
    async def astrstop(self, message):
        """- –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–∞—Ä–º–∞ –≤ –±–æ—Ç–µ."""
        self.config["AutoTree"] = False
        self.main_loop.stop()
        await message.edit("<b>–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞</b>. <emoji document_id=5433707707653704490>üíÄ</emoji>")